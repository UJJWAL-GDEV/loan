  /* const [token, setToken] = useState('');
 useEffect(() => {

      console.log(storedToken)
     if (storedToken) {
     setToken(storedToken);
      
     }
   }, []); */

   /* <Select
                {...register("zoneId", { required: "Zone is required" })}
                onChange={(e) => {
                  setValue("stateId", "");
                  setValue("cityId", "");
                  fetchStates(e.target.value);
                }}
                className={`mt-1 p-2 border rounded-md focus:outline-none focus:ring focus:border-blue-300 ${
                  errors.zoneId ? "border-red-500" : ""
                }`}
              >
                <option value="" disabled>Select Zone</option>
                {zones.map((zone) => (
                  <option key={zone._id} value={zone._id}>
                    {zone.name}
                  </option>
                ))}
              </Select> */

              /* <select
                {...register("stateId", { required: "State is required" })}
                onChange={(e) => {
                  setValue("stateId", "");
                  setValue("cityId", "");
                  fetchCities(e.target.value);
                }}
                className={`mt-1 p-2 border rounded-md focus:outline-none focus:ring focus:border-blue-300 ${
                  errors.stateId ? "border-red-500" : ""
                }`}
              >
                <option value="" disabled>Select State</option>
                {states.map((state) => (
                  <option key={state._id} value={state._id}>
                    {state.name}
                  </option>
                ))}
              </select> */

              /* <select
                {...register("cityId", { required: "City is required" })}
                // onChange={(e) => {
                //   setValue("cityId", "");
                //   fetchCities(e.target.value);
                // }}
                className={`mt-1 p-2 border rounded-md focus:outline-none focus:ring focus:border-blue-300 ${
                  errors.cityId ? "border-red-500" : ""
                }`}
              >
                <option value="" disabled>Select City</option>
                {cities.map((city) => (
                  <option key={city._id} value={city._id}>
                    {city.name}
                  </option>
                ))}
              </select> */

              /* <div className="col-span-1">
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-600">State</label>
              <input
                {...register("state", { required: "State is required" })}
                className={`mt-1 p-2 w-full border rounded-md focus:outline-none focus:ring focus:border-blue-300 ${
                  errors.state ? "border-red-500" : ""
                }`}
              />
              {errors.state && <span className="text-red-500 text-xs">{errors.state.message}</span>}
            </div>
          </div> */

          /* <div className="col-span-1">
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-600">City</label>
              <input
                {...register("city", { required: "City is required" })}
                className={`mt-1 p-2 w-full border rounded-md focus:outline-none focus:ring focus:border-blue-300 ${
                  errors.city ? "border-red-500" : ""
                }`}
              />
              {errors.city && <span className="text-red-500 text-xs">{errors.city.message}</span>}
            </div>
          </div> */